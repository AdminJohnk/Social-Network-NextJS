import { NextIntlClientProvider, useMessages } from 'next-intl';
import { unstable_setRequestLocale } from 'next-intl/server';
import type { Metadata } from 'next';
import { Flowbite, ThemeModeScript } from 'flowbite-react';
import { Inter } from 'next/font/google';
import Script from 'next/script';
import { ToastContainer } from 'react-toastify';

import { QueryProvider, SessionProvider } from '@/app/provider';
import { locales } from '@/i18n';
import { cn } from '@/lib/utils';

export interface ILocaleLayoutProps {
  children: React.ReactNode;
  params: {
    locale: string;
  };
}

const font = Inter({ subsets: ['latin', 'vietnamese'] });

export const metadata: Metadata = {
  title: 'Devhub',
  description: 'Generated by create next app'
};

export default function LocaleLayout({ children, params: { locale } }: ILocaleLayoutProps) {
  unstable_setRequestLocale(locale);
  const message = useMessages();

  return (
    <html lang={locale} suppressHydrationWarning>
      <head>
        <ThemeModeScript />
        <link rel='icon' href='/icon.png' type='image/png' sizes='png' />
      </head>

      <Script src='/js/uikit.min.js' />

      <body className={cn(font.className, 'h-dvh custom-scrollbar-bg')}>
        <QueryProvider>
          <SessionProvider>
            <NextIntlClientProvider messages={message} locale={locale}>
              <Flowbite>
                {children}
                <ToastContainer />
              </Flowbite>
            </NextIntlClientProvider>
          </SessionProvider>
        </QueryProvider>
      </body>
    </html>
  );
}

export function generateStaticParams() {
  return locales.map((locale) => ({ locale }));
}
